plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

repositories {
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "curse.maven:glitterglue-${project.glue_id}:${project.glue_jar_id}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "mod_id", project.mod_id
	inputs.property "mod_name", project.mod_name
	inputs.property "mod_description", project.mod_description
	inputs.property "version", project.version
	inputs.property "main_class", project.main_class


	filesMatching("fabric.mod.json") {
		expand(
				"version": project.mod_version,
				"mod_id": project.mod_id,
				"mod_name": project.mod_name,
				"mod_description": project.mod_description,
				"main_class": project.main_class
		)
	}
	filesMatching("gradle.properties") {
		expand "mod_name": project.mod_name
	}
	filesMatching(project.main_class+".java") {
		expand "mod_id": project.mod_id
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.mod_name_abridged}"}
	}
}

sourceSets {
	main{
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

loom {
	assemble.dependsOn processResources
	accessWidenerPath = file("src/main/resources/music_travels.accessWidener")
	runs {
		datagen {
			server()

			name "Minecraft Data"
			name "Minecraft Data"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

			runDir "build/datagen"
		}
	}
}
assemble.dependsOn runDatagen
assemble.dependsOn processResources
assemble.dependsOn remapJar
// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

curseforge {
	if(!System.getenv().containsKey("apikey")){
		System.out.println("Could not upload, api key not found")
		return
	} else {
		apiKey = System.getenv("apikey")
		project {
			id = '678597'
			changelog = "complete rework adding unique quests for each disc"
			releaseType = 'release'
			addGameVersion '1.19.2'

			mainArtifact(remapJar) {
				relations {
					requiredDependency 'fabric-api'
				}
				displayName = "$project.mod_name: $project.mod_version"
			}
			afterEvaluate {
				tasks.curseforge.dependsOn remapJar
			}

		}
		options {
			forgeGradleIntegration = false
		}
	}
}